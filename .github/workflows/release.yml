name: Release

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { version: "2.12.11", binary-version: "2.12", java-version: "8" }

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.scala.java-version }}


      - name: Cache Coursier
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier
          key: ${{ runner.os }}-coursier-scala-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-coursier-scala-${{ matrix.scala.binary-version }}-

      - name: Cache Ivy
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-ivy-scala-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-ivy-scala-${{ matrix.scala.binary-version }}-

      - name: non tag build
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
          PROJECT_VERSION=$(git log --format=%H -1)
          echo "It's not a tag build"
          echo "CURRENT_BRANCH=${CURRENT_BRANCH}"
          echo "PROJECT_VERSION=${PROJECT_VERSION}"

      - name: tag build
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          PROJECT_VERSION="${GITHUB_REF#refs/tags/v}"
          echo "It's a tag build"
          echo "PROJECT_VERSION=${PROJECT_VERSION}"

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { version: "2.12.11", binary-version: "2.12", java-version: "8" }

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.scala.java-version }}

      - name: Cache Coursier
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier
          key: ${{ runner.os }}-coursier-scala-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-coursier-scala-${{ matrix.scala.binary-version }}-

      - name: Cache Ivy
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-ivy-scala-${{ matrix.scala.binary-version }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-ivy-scala-${{ matrix.scala.binary-version }}-


      - name: sbt GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        run: |
          echo "Run] sbt GitHub release"
          PROJECT_VERSION="${GITHUB_REF#refs/tags/v}"
          echo "PROJECT_VERSION=${PROJECT_VERSION}"
          echo 'sbt -J-Xmx2048m ++${{ matrix.scala.version }}! clean test packagedArtifacts'
          sbt -J-Xmx2048m \
            ++${{ matrix.scala.version }}! \
            'set version in ThisBuild := "'$PROJECT_VERSION'"' \
            clean \
            test \
            packagedArtifacts \
            gitHubRelease
